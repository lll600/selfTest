<template>
  <div class="search-main-contain">
    <div class="search-contain-bg"></div>
    <div class="search-contain">
      <i v-show="hasBack" class="iconfont icon-arrow_left" @click="toBack"></i>
      <div class="search-left" :class="hasBack?'has-back':'no-back'">
        <i class="iconfont icon-ss"></i>
        
        <input
          type="text"
          :focus="isFocus"
          v-model="keyWords"
          placeholder="搜索"
          @click="toSearch"
          @bindconfirm="findAll"
        >
        <!-- <i v-show="keyWords.length > 0" @click="clearSearch" class="iconfont icon-bzh_tc"></i> -->
        <!-- <icon type="clear" size="40" /> -->
      </div>
    </div>
  </div>
</template>

<script>
export default {
  props: ["searchValue"],
  data() {
    return {
      keyWords: this.searchValue ? this.searchValue : "",
      nowUrl: "",
      hasBack: false,
      isFocus: false
    };
  },
  created() {
    this.getUrl();
  },
  watch: {
    keyWords() {
      this.$emit("searchKeyWords", this.keyWords);
    }
  },
  methods: {
    getUrl() {
      let pages = getCurrentPages();
      let currentPage = pages[pages.length - 1];
      this.nowUrl = currentPage.route;
      if (this.nowUrl == "pages/searchDetail/main") {
        this.isFocus = true;
      } else {
        this.isFocus = false;
      }
      if (this.nowUrl == "pages/index/main") {
        this.hasBack = false;
      } else {
        this.hasBack = true;
      }
    },
    clearSearch() {
      this.keyWords = "";
    },
    toBack() {
      wx.navigateBack({
        delta: 1
      });
    },
    toSearch() {
      if(this.nowUrl == 'pages/searchDetail/main'){
        wx.redirectTo({
          url: "/pages/search/main"
        });
      }
      else if (this.nowUrl !== "pages/search/main") {
        wx.navigateTo({
          url: "/pages/search/main"
        });
      }
    },
    findAll() {
      if (this.nowUrl == "pages/search/main") {
        let m = this.keyWords;
        m = m.replace(/\\/g, "");
        if (m.trim()) {
          wx.redirectTo({
            url: "/pages/searchDetail/main?searchValue=" + m
          });
        } else {
          wx.redirectTo({
            url: "/pages/index/main"
          });
        }
      }
    }
  }
};
</script>

<style lang="scss">
.search-main-contain {
  .search-contain-bg {
    background: #fff;
    height: 20px;
    width: 100%;
    position: fixed;
    z-index: 9;
  }
  .search-contain {
    background: #fff;
    height: 40px;
    width: 100%;
    line-height: 40px;
    color: #666;
    font-size: 16px;
    position: fixed;
    top: 20px;
    display: flex;
    z-index: 9;
    .icon-arrow_left {
      line-height: 40px;
      margin-left: 5%;
    }
    .has-back {
      width: 65%;
      margin-left: 2%;
    }
    .no-back {
      margin-left: 5%;
      width: 70%;
    }
    .search-left {
      background: #f8f8f8;
      height: 30px;

      float: left;
      margin-top: 5px;

      border-radius: 15px;
      line-height: 30px;
      display: flex;
      align-items: center;

      .iconfont {
        font-size: 16px;
        padding-left: 10px;
        // float: left;
        // width: 10%;
      }
      input {
        height: 30px;
        width: 50%;
        position: absolute;
        margin-left: 10%;
      }
      .icon-clear {
        position: absolute;
        right: 27.5%;
        color: #bfbfbf;
        // display: inline-block;
        // width: 35rpx;
        // height: 35rpx;
        // text-align: center;
        // line-height: 35rpx;
        // border-radius: 50%;
        // font-size: 28rpx;
      }
    }
    .search-right {
      width: 15%;
      text-align: center;
      float: left;
      .iconfont {
        font-size: 20px;
      }
    }
  }
}
</style>
